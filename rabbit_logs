/home/igor/Applications/jdk/jdk-11.0.8/bin/java -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:42607,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:/home/igor/Applications/idea-IU-201.8743.12/plugins/Groovy/lib/agent/gragent.jar -javaagent:/home/igor/Applications/idea-IU-201.8743.12/plugins/java/lib/rt/debugger-agent.jar -Dfile.encoding=UTF-8 -classpath /home/igor/IdeaProjects/learce/build/classes/java/main:/home/igor/IdeaProjects/learce/build/resources/main:/home/igor/IdeaProjects/learce/libs/amqp-client-6.0.0-SNAPSHOT.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/2.2.2.RELEASE/3e15f18a4dafd499b900082f3cc25bb11ea91821/spring-boot-starter-web-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/9.0.21/225a44fe65e9832f896e09f343ce107d38f3ee1b/tomcat-embed-core-9.0.21.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy/2.4.15/74b7e0b99526c569e3a59cb84dbcc6204d601ee6/groovy-2.4.15.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/2.2.2.RELEASE/cd343e40e4de11f78d6d70f3f35f4ca93ea9de9f/spring-boot-starter-tomcat-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/2.2.2.RELEASE/7ef93e43938abf3064cce9b7317bdb8278060437/spring-boot-starter-json-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-validation/2.2.2.RELEASE/ef3ac3571ae518f22117e8bce826970b358f3cdf/spring-boot-starter-validation-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/2.2.2.RELEASE/1f8bb1e33a900c95dc31011e0998b70929d05a68/spring-boot-starter-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.2.2.RELEASE/a0e9e88a296c09850f92318872f4dee9f62c8c13/spring-webmvc-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/5.2.2.RELEASE/d9b0a8079b7d604f134e3054127a7aeba65949a5/spring-web-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-annotations-api/9.0.29/fd25581ccf7810ea18f3fd1e9971468d7c487686/tomcat-annotations-api-9.0.29.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/9.0.29/57a550a531648dd665444f11d45c352a6978c7b6/tomcat-embed-websocket-9.0.29.jar:/home/igor/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/1.3.5/59eb84ee0d616332ff44aba065f3888cf002cd2d/jakarta.annotation-api-1.3.5.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/9.0.29/3c1186083cb613c18949ffac21d856ecf8cdfd13/tomcat-embed-el-9.0.29.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.10.1/db9247b3eb6f07520ff6ff6d1070439edd6803c3/jackson-datatype-jdk8-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.10.1/52ee272b0181a1c0df5c931235c494b1e0e022d0/jackson-datatype-jsr310-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.10.1/6643b48d7dab2fb8c874526bea13ce4cd1a76cb9/jackson-module-parameter-names-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.10.1/18eee15ffc662d27538d5b6ee84e4c92c0a9d03e/jackson-databind-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/jakarta.validation/jakarta.validation-api/2.0.1/5a864a58587cd76243b8ec55dd7115c9eac25c08/jakarta.validation-api-2.0.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.hibernate.validator/hibernate-validator/6.0.18.Final/7fd00bcd87e14b6ba66279282ef15efa30dd2492/hibernate-validator-6.0.18.Final.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/2.2.2.RELEASE/2e7876e237097d36bfffd5ce3416930f6d6b579c/spring-boot-autoconfigure-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/2.2.2.RELEASE/cc636f24a5ebbfb21f1c8c30ed9c3b13512c16ec/spring-boot-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/2.2.2.RELEASE/dd6b1771f1b3288b332cd41705aadcb2aebda221/spring-boot-starter-logging-2.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/5.2.2.RELEASE/bfcf2f6d0494d89db63ae170b8491223c93a88dc/spring-core-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/5.2.2.RELEASE/a77a18fa425eba9c55447fa0711e2dbfbf71907b/spring-context-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/5.2.2.RELEASE/899739cf7f338f6297aa9eb25ea8b16338fe4e6d/spring-aop-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/5.2.2.RELEASE/81e4d9cc2e8fac88ab4eb7325c4521bd07c6389c/spring-beans-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/5.2.2.RELEASE/eb93bc4d4eb8e0bee60ea910e0fd615869336643/spring-expression-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.10.1/2c8b5e26ba40e5f91eb37a24075a2028b402c5f9/jackson-core-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.10.1/54d72475c0d6819f2d0e9a09d25c3ed876a4972f/jackson-annotations-2.10.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.4.1.Final/40fd4d696c55793e996d1ff3c475833f836c2498/jboss-logging-3.4.1.Final.jar:/home/igor/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.2.3/7c4f3c474fb2c041d8028740440937705ebb473a/logback-classic-1.2.3.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.12.1/dfb42ea8ce1a399bcf7218efe8115a0b7ab3788a/log4j-to-slf4j-2.12.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/1.7.29/f58dd9d8c15a1141a48de53d2d6b723ae6cf18d6/jul-to-slf4j-1.7.29.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/5.2.2.RELEASE/35efd564bf664c0bf53bd336b583391a7f872da7/spring-jcl-5.2.2.RELEASE.jar:/home/igor/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.2.3/864344400c3d4d92dfeb0a305dc87d953677c03c/logback-core-1.2.3.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.29/e56bf4473a4c6b71c7dd397a833dce86d1993d9d/slf4j-api-1.7.29.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.12.1/a55e6d987f50a515c9260b0451b4fa217dc539cb/log4j-api-2.12.1.jar:/home/igor/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.25/8b6e01ef661d8378ae6dd7b511a7f2a33fae1421/snakeyaml-1.25.jar:/home/igor/Applications/idea-IU-201.8743.12/lib/idea_rt.jar com.learce.test_server.TestServer
Connected to the target VM, address: '127.0.0.1:42607', transport: 'socket'
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/home/igor/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy/2.4.15/74b7e0b99526c569e3a59cb84dbcc6204d601ee6/groovy-2.4.15.jar) to method java.lang.Object.finalize()
WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.2.RELEASE)

03:40:30.501 [main] INFO  com.learce.test_server.TestServer - Starting TestServer on igor-Aspire-E5-573G with PID 25225 (/home/igor/IdeaProjects/learce/build/classes/java/main started by igor in /home/igor/IdeaProjects/learce)
03:40:30.507 [main] INFO  com.learce.test_server.TestServer - No active profile set, falling back to default profiles: default
03:40:31.804 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
03:40:31.815 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
03:40:31.816 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
03:40:31.816 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.21]
03:40:31.905 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
03:40:31.905 [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1257 ms
03:40:32.032 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<connection.start>(version-major=0, version-minor=9, server-properties={cluster_name=rabbit@ab423394362c, copyright=Copyright (c) 2007-2020 VMware, Inc. or its affiliates., product=RabbitMQ, capabilities={consumer_priorities=true, exchange_exchange_bindings=true, connection.blocked=true, authentication_failure_close=true, per_consumer_qos=true, basic.nack=true, direct_reply_to=true, publisher_confirms=true, consumer_cancel_notify=true}, information=Licensed under the MPL 2.0. Website: https://rabbitmq.com, version=3.8.6, platform=Erlang/OTP 23.0.3}, mechanisms=PLAIN AMQPLAIN, locales=en_US), null, ""}
03:40:32.043 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<connection.start-ok>(client-properties={product=RabbitMQ, copyright=Copyright (c) 2007-2020 VMware, Inc. or its affiliates., capabilities={exchange_exchange_bindings=true, connection.blocked=true, authentication_failure_close=true, basic.nack=true, publisher_confirms=true, consumer_cancel_notify=true}, information=Licensed under the MPL. See https://www.rabbitmq.com/, version=6.0.0-SNAPSHOT, platform=Java}, mechanism=PLAIN, response= guest guest, locale=en_US), null, ""}
03:40:32.046 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=0, 400 bytes of accumulator)  
   lproductS  RabbitMQ	copyrightS   7Copyright (c) 2007-2020 VMware, Inc. or its affiliates.capabilitiesF   �exchange_exchange_bindingstconnection.blockedtauthentication_failure_closet
basic.nacktpublisher_confirmstconsumer_cancel_notifytinformationS   5Licensed under the MPL. See https://www.rabbitmq.com/versionS   6.0.0-SNAPSHOplatformS   JavaPLAIN    guest guesten_US




03:40:32.053 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<connection.tune>(channel-max=2047, frame-max=131072, heartbeat=60), null, ""}
03:40:32.083 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<connection.tune-ok>(channel-max=2047, frame-max=131072, heartbeat=60), null, ""}
03:40:32.083 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=0, 12 bytes of accumulator)  
 �    <
03:40:32.084 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<connection.open>(virtual-host=/, capabilities=, insist=false), null, ""}
03:40:32.085 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=0, 8 bytes of accumulator)  
 (/  
03:40:32.086 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<connection.open-ok>(known-hosts=), null, ""}
03:40:32.106 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<channel.open>(out-of-band=), null, ""}
03:40:32.107 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=1, 5 bytes of accumulator)   
 
03:40:32.109 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<channel.open-ok>(channel-id=), null, ""}
03:40:32.119 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<queue.declare>(ticket=0, queue=new_queue, passive=false, durable=false, exclusive=false, auto-delete=false, nowait=false, arguments=null), null, ""}
03:40:32.119 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=1, 21 bytes of accumulator)  2 
  	new_queue     
03:40:32.122 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<queue.declare-ok>(queue=new_queue, message-count=0, consumer-count=0), null, ""}
03:40:32.122 [main] INFO  c.l.t.services.ReceiveService -  [*] Waiting for messages...
03:40:32.125 [main] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<basic.consume>(ticket=0, queue=new_queue, consumer-tag=, no-local=false, no-ack=true, exclusive=false, nowait=false, arguments=null), null, ""}
03:40:32.126 [main] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=1, 22 bytes of accumulator)  <   	new_queue     
03:40:32.129 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<basic.consume-ok>(consumer-tag=amq.ctag-mRwvcbSjGtnGVleLJRP5HA), null, ""}
03:40:32.350 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
03:40:32.557 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
03:40:32.583 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
03:40:32.589 [main] INFO  com.learce.test_server.TestServer - Started TestServer in 2.653 seconds (JVM running for 5.377)
03:40:50.462 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
03:40:50.462 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
03:40:50.470 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
03:40:50.518 [http-nio-8080-exec-1] INFO  c.l.t.c.AmqpClientController - Starting send...
03:40:50.518 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<channel.open>(out-of-band=), null, ""}
03:40:50.518 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=2, 5 bytes of accumulator)   
 
03:40:50.520 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<channel.open-ok>(channel-id=), null, ""}
03:40:50.521 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<queue.declare>(ticket=0, queue=new_queue, passive=false, durable=false, exclusive=false, auto-delete=false, nowait=false, arguments=null), null, ""}
03:40:50.521 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=2, 21 bytes of accumulator)  2 
  	new_queue     
03:40:50.522 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<queue.declare-ok>(queue=new_queue, message-count=0, consumer-count=1), null, ""}
03:40:50.527 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<basic.publish>(ticket=0, exchange=, routing-key=new_queue, mandatory=false, immediate=false), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "Hello"}
03:40:50.528 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=2, 18 bytes of accumulator)  < (   	new_queue 
03:40:50.528 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=2, channel=2, 14 bytes of accumulator)  <           
03:40:50.528 [http-nio-8080-exec-1] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=3, channel=2, 5 bytes of accumulator) Hello
03:40:50.529 [http-nio-8080-exec-1] INFO  c.l.test_server.services.SendService -  [x] Sent 'Hello'
03:40:50.530 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<basic.deliver>(consumer-tag=amq.ctag-mRwvcbSjGtnGVleLJRP5HA, delivery-tag=1, redelivered=false, exchange=, routing-key=new_queue), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "Hello"}
03:40:50.533 [pool-1-thread-4] INFO  c.l.t.services.ReceiveService -  [x] Received 'Hello'
03:40:50.802 [http-nio-8080-exec-2] INFO  c.l.t.c.AmqpClientController - Starting send...
03:40:50.802 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<channel.open>(out-of-band=), null, ""}
03:40:50.802 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=3, 5 bytes of accumulator)   
 
03:40:50.806 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<channel.open-ok>(channel-id=), null, ""}
03:40:50.807 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<queue.declare>(ticket=0, queue=new_queue, passive=false, durable=false, exclusive=false, auto-delete=false, nowait=false, arguments=null), null, ""}
03:40:50.808 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=3, 21 bytes of accumulator)  2 
  	new_queue     
03:40:50.811 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<queue.declare-ok>(queue=new_queue, message-count=0, consumer-count=1), null, ""}
03:40:50.813 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<basic.publish>(ticket=0, exchange=, routing-key=new_queue, mandatory=false, immediate=false), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "favicon.ico"}
03:40:50.813 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=3, 18 bytes of accumulator)  < (   	new_queue 
03:40:50.813 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=2, channel=3, 14 bytes of accumulator)  <           
03:40:50.813 [http-nio-8080-exec-2] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=3, channel=3, 11 bytes of accumulator) favicon.ico
03:40:50.813 [http-nio-8080-exec-2] INFO  c.l.test_server.services.SendService -  [x] Sent 'favicon.ico'
03:40:50.815 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<basic.deliver>(consumer-tag=amq.ctag-mRwvcbSjGtnGVleLJRP5HA, delivery-tag=2, redelivered=false, exchange=, routing-key=new_queue), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "favicon.ico"}
03:40:50.821 [pool-1-thread-5] INFO  c.l.t.services.ReceiveService -  [x] Received 'favicon.ico'
03:41:01.387 [http-nio-8080-exec-3] INFO  c.l.t.c.AmqpClientController - Starting send...
03:41:01.389 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<channel.open>(out-of-band=), null, ""}
03:41:01.390 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=4, 5 bytes of accumulator)   
 
03:41:01.393 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<channel.open-ok>(channel-id=), null, ""}
03:41:01.393 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<queue.declare>(ticket=0, queue=new_queue, passive=false, durable=false, exclusive=false, auto-delete=false, nowait=false, arguments=null), null, ""}
03:41:01.393 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=4, 21 bytes of accumulator)  2 
  	new_queue     
03:41:01.394 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<queue.declare-ok>(queue=new_queue, message-count=0, consumer-count=1), null, ""}
03:41:01.395 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<basic.publish>(ticket=0, exchange=, routing-key=new_queue, mandatory=false, immediate=false), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "Hello"}
03:41:01.395 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=4, 18 bytes of accumulator)  < (   	new_queue 
03:41:01.395 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=2, channel=4, 14 bytes of accumulator)  <           
03:41:01.395 [http-nio-8080-exec-3] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=3, channel=4, 5 bytes of accumulator) Hello
03:41:01.395 [http-nio-8080-exec-3] INFO  c.l.test_server.services.SendService -  [x] Sent 'Hello'
03:41:01.396 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<basic.deliver>(consumer-tag=amq.ctag-mRwvcbSjGtnGVleLJRP5HA, delivery-tag=3, redelivered=false, exchange=, routing-key=new_queue), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "Hello"}
03:41:01.398 [pool-1-thread-6] INFO  c.l.t.services.ReceiveService -  [x] Received 'Hello'
03:41:01.553 [http-nio-8080-exec-4] INFO  c.l.t.c.AmqpClientController - Starting send...
03:41:01.553 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<channel.open>(out-of-band=), null, ""}
03:41:01.553 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=5, 5 bytes of accumulator)   
 
03:41:01.559 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<channel.open-ok>(channel-id=), null, ""}
03:41:01.559 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<queue.declare>(ticket=0, queue=new_queue, passive=false, durable=false, exclusive=false, auto-delete=false, nowait=false, arguments=null), null, ""}
03:41:01.560 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=5, 21 bytes of accumulator)  2 
  	new_queue     
03:41:01.562 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<queue.declare-ok>(queue=new_queue, message-count=0, consumer-count=1), null, ""}
03:41:01.562 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Outbound command: {#method<basic.publish>(ticket=0, exchange=, routing-key=new_queue, mandatory=false, immediate=false), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "favicon.ico"}
03:41:01.563 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=1, channel=5, 18 bytes of accumulator)  < (   	new_queue 
03:41:01.563 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=2, channel=5, 14 bytes of accumulator)  <           
03:41:01.563 [http-nio-8080-exec-4] TRACE c.r.client.impl.LogTrafficListener - Frame: Frame(type=3, channel=5, 11 bytes of accumulator) favicon.ico
03:41:01.564 [http-nio-8080-exec-4] INFO  c.l.test_server.services.SendService -  [x] Sent 'favicon.ico'
03:41:01.564 [AMQP Connection 127.0.0.1:5672] TRACE c.r.client.impl.LogTrafficListener - Inbound command: {#method<basic.deliver>(consumer-tag=amq.ctag-mRwvcbSjGtnGVleLJRP5HA, delivery-tag=4, redelivered=false, exchange=, routing-key=new_queue), #contentHeader<basic>(content-type=null, content-encoding=null, headers=null, delivery-mode=null, priority=null, correlation-id=null, reply-to=null, expiration=null, message-id=null, timestamp=null, type=null, user-id=null, app-id=null, cluster-id=null), "favicon.ico"}
03:41:01.569 [pool-1-thread-7] INFO  c.l.t.services.ReceiveService -  [x] Received 'favicon.ico'

